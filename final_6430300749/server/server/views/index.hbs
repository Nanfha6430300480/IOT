<!DOCTYPE html>
<html lang="en">
  {{>navbar}}
  <head>
    <link rel="shortcut icon" href="#" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0, shrink-to-fit=no' name='viewport' />
    <link href="../assets/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/latest/css/font-awesome.min.css" />
    <link href="../assets/css/light-bootstrap-dashboard.css?v=2.0.0 " rel="stylesheet" />
    <link href="../assets/css/demo.css" rel="stylesheet" />
    <script src="../assets/js/core/jquery.3.2.1.min.js" type="text/javascript"></script>

  </head>

  <body onload={drawTP(0);drawEC(0);drawPH(0);}>
    <br></br>
    <div class="wrapper">
      <div class="main-panel">   
        <div class="content">
          <div class="container-fluid">
            <div class="row">                       
              <div class="col-md-6">
                <div class="card ">
                  <div class="card-header ">
                    <h4 class="card-title">EC</h4>
                     <h5 id="ecVal" class="card-title">10.0 us/cm</h4>
                  </div>
                  <div class="card-body">
                    <canvas id="EC" width="300" height="220" style="border:1px solid #3d3d3"></canvas>
                  </div>
                </div>
              </div>    
              <div class="col-md-6">
                <div class="card ">
                  <div class="card-header ">
                    <h4 class="card-title"> PH </h4>
                     <h4 id="phVal" class="card-title">10.0</h4>
                  </div>
                  <div class="card-body">
                    <canvas id="PH" width="300" height="220" style="border:1px solid #3d3d3"></canvas>
                   
                    
                  </div>
                </div>
              </div>
            </div>
            <div class="row">  
              <div class="col-md-6">
                <div class="card ">
                  <div class="card-header ">
                    <h4 class="card-title">Temperature</h4>
                    <h4 id="temperatureVal" class="card-title">10.0  C</h4>
                  </div>
                  <div class="card-body">
                   
                    <canvas id="TP" width="300" height="220" style="border:1px solid #3d3d3"></canvas>
                   
                    
                  </div>
                </div>
              </div>  
              <div class="col-md-6">
                <div class="card ">
                  <div class="card-header ">
                    <h4 class="card-title">Humidity</h4>
                    <h4 id="humVal" class="card-title">10.0</h4>
                  </div>
                  <div class="card-body">
                     <canvas id="HM" width="300" height="220" style="border:1px solid #3d3d3"></canvas>
                   
                    
                   
                  </div>
                </div>
              </div>                              
            </div>
            <div class ="row">
              <div class="col-md-6">
                <div class="card ">
                  <div class="card-header ">
                    <h4 class="card-title">Nitrogen</h4>
                    <h4 id="Nitroval" class="card-title">10.0</h4>
                  </div>
                  <div class="card-body">
                     <canvas id="Nitro" width="300" height="220" style="border:1px solid #3d3d3"></canvas>

                  </div>
                </div>
              </div>
              <div class="col-md-6">
                <div class="card ">
                  <div class="card-header ">
                    <h4 class="card-title">Phosphorus</h4>
                    <h4 id="Phosval" class="card-title">10.0</h4>
                  </div>
                  <div class="card-body">
                     <canvas id="Phos" width="300" height="220" style="border:1px solid #3d3d3"></canvas>
                  </div>
                </div>
              </div>
            </div>
            
            <div class = "row">
              <div class="col-md-6">
                <div class="card ">
                  <div class="card-header ">
                    <h4 class="card-title">Potassium</h4>
                    <h4 id="Potassiumval" class="card-title">10.0</h4>
                  </div>
                  <div class="card-body">
                     <canvas id="K" width="300" height="220" style="border:1px solid #3d3d3"></canvas>
                   
                    
                   
                  </div>
                </div>
              </div>
            </div>

          </div> 
        </div>
      </div>
      </div>
    </div>  
    
  </body>
<!--   Core JS Files   -->


<script src="../assets/js/core/jquery.3.2.1.min.js" type="text/javascript"></script>
<script type="text/javascript">
    function drawEC(EC) {
    var canvas = document.getElementById('EC');
    document.getElementById('ecVal').innerHTML = EC + " us/cm";
    var ctx = canvas.getContext('2d');
    var X = canvas.width / 2;
    var Y = canvas.height / 2;
    var R = 95;
    var percentage = (EC / 10) * 100; // Assuming 10 is the maximum value

    // Clear canvas
    ctx.clearRect(0, 0, canvas.width, canvas.height);

    // Outer circle
    ctx.beginPath();
    ctx.arc(X, Y, R, 0, 2 * Math.PI);
    ctx.lineWidth = 10;
    ctx.strokeStyle = '#ddd'; // Light gray
    ctx.stroke();

    // Inner filled arc
    ctx.beginPath();
    ctx.arc(X, Y, R, 0, (2 * Math.PI * percentage) / 100);
    ctx.lineWidth = 10;
    ctx.strokeStyle = '#FF0000'; // Red
    ctx.stroke();

    // Text
    ctx.fillStyle = '#333'; // Dark gray
    ctx.font = '20px Arial';
    ctx.textAlign = 'center';
    ctx.fillText(EC + ' us/cm', X, Y);
  };



  function drawPH(PH) {
    var canvas = document.getElementById('PH');
    document.getElementById('phVal').innerHTML = PH;
    if (canvas.getContext) {
      var ctx = canvas.getContext('2d');
      var X = canvas.width / 2;
      var Y = canvas.height / 2;
      var R = 95;
      ctx.clearRect(0, 0, canvas.width, canvas.height); // เคลียร์ Canvas ก่อนวาดใหม่
      ctx.beginPath();
      ctx.arc(X, Y, R, 0, 2 * Math.PI * (PH / 14), false); // ปรับขนาดของวงกลมโดยใช้ค่า PH
      ctx.lineWidth = 5;
      ctx.strokeStyle = '#FF0000';
      ctx.stroke();
    }
  };





  function drawTP(temp) {
    var canvas = document.getElementById('TP');
    document.getElementById('temperatureVal').innerHTML = temp + " C"; // Update element with temperature value

    if (canvas.getContext) {
      var ctx = canvas.getContext('2d');
      // Clear canvas
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      // Example of drawing a bar chart
      ctx.fillStyle = "red";
      ctx.fillRect(0, canvas.height - temp, 50, temp);
    }
  };

  function drawHM(hum) {
    var canvas = document.getElementById('HM');
    document.getElementById('humVal').innerHTML = hum;
    if (canvas.getContext) {
      var ctx = canvas.getContext('2d');
      // Clear canvas
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      // Example of drawing a bar chart
      ctx.fillStyle = "green";
      ctx.fillRect(0, canvas.height - hum, 50, hum);
    }
  };

  function drawN(N) {
    var canvas = document.getElementById('Nitro');
    document.getElementById('Nitroval').innerHTML = N ; // Update element with temperature value

    if (canvas.getContext) {
      var ctx = canvas.getContext('2d');
      // Clear canvas
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      // Example of drawing a bar chart
      ctx.fillStyle = "red";
      ctx.fillRect(0, canvas.height - N, 50, N);
    }
  };

  function drawP(P) {
    var canvas = document.getElementById('Phos');
    document.getElementById('Phosval').innerHTML = P ; // Update element with temperature value

    if (canvas.getContext) {
      var ctx = canvas.getContext('2d');
      // Clear canvas
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      // Example of drawing a bar chart
      ctx.fillStyle = "green";
      ctx.fillRect(0, canvas.height - P, 50, P);
    }
  };

  function drawK(Potass) {
    var canvas = document.getElementById('K');
    document.getElementById('Potassiumval').innerHTML = Potass ; // Update element with temperature value

    if (canvas.getContext) {
      var ctx = canvas.getContext('2d');
      // Clear canvas
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      // Example of drawing a bar chart
      ctx.fillStyle = "green";
      ctx.fillRect(0, canvas.height - Potass , 50, Potass );
    }
  };


    function setWaterTimer() {
    // รับค่าจาก input element
    var timer = document.getElementById('waterTimer').value;
    var type = "waterPump";
    var payload = {
      "waterTimer": timer,
      "type": type,
    }

    // ส่งข้อมูลผ่าน AJAX request
    console.log("Payload:", payload);

    $.ajax({
      url: "/updateTimer",
      type: "POST",
      contentType: "application/json",
      data: JSON.stringify(payload), // Sending data as JSON
      success: function (data) {
        console.log("Response:",data);
        if (data.status) {
          alert("Water timer updated successfully");
        } else {
          alert("Error updating water timer. Please try again.");
        }
      },
      error: function () {
        alert("Failed to update water timer. Please try again later.");
      }
    });
  }




  function setPlantTimer() {
    // รับค่าจาก input element
    var fert = document.getElementById('fertilizer').value;
    var type = "fertilizer";
    var payload = {
      "fertilizer": fert,
      "type" : type,
    }

    // ส่งข้อมูลผ่าน AJAX request
    console.log("Payload:", payload);

    $.ajax({
      url: "/updatePlant",
      type: "POST",
      contentType: "application/json",
      data: JSON.stringify(payload), // Sending data as JSON
      success: function (data) {
        console.log("Response:",data);
        if (data.status) {
          alert("Plant timer updated successfully");
        } else {
          alert("Error updating Plant timer. Please try again.");
        }
      },
      error: function () {
        alert("Failed to update Plant timer. Please try again later.");
      }
    });
  }

   // Create WebSocket connection.
    console.log("tetststs");
    const socket = new WebSocket('ws://10.64.194.20:3001');
    
    socket.addEventListener('open', function (event) {
      //alert("XXXXXXXXXXXX");
      console.log('Connected to WS Server')
    });
    socket.addEventListener('message', function (event) {
      var obj = JSON.parse(event.data);
      console.log('Message from server ', event.data);
      obj.forEach(st => {
        console.log('Message from server ', st.temperature);
        console.log('Message from server ', st.humidity);
        console.log('Message from server ', st.ec);
        console.log('Message from server ', st.ph);
        console.log('Message from server ', st.n);
        console.log('Message from server ', st.p);
        console.log('Message from server ', st.k);


        drawTP(st.temperature);
        drawHM(st.humidity);
        drawEC(st.ec);
        drawPH(st.ph);
        drawN(st.n);
        drawP(st.p);
        drawK(st.k);

      });
    });   


    function GetMonitorSize() {
        var x = "Total Width: " + screen.width + "px" + "Total Height: " +screen.height;
        //<!--canvas id="wifi" width="600" height="220" style="border:1px solid #3d3d3"></canvas-->
        document.getElementById("ttt").innerHTML = "<canvas id=\"wifi\" width=\"600\" height=\"220\" style=\"border:1px solid #3d3d3\"></canvas>";
       // var width = document.getElementById("width");
        //var height = document.getElementById("height");
        //width.value = screen.width;
        //height.value=screen.height;
    }
</script> 
</html>
